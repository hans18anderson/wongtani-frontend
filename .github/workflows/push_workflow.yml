on:
  push:
    branches:
      - master

jobs:
  build-js-production:
    name: Build JavaScript/CSS for Production Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 0.9
      - name: NPM Build
        run:          
          npm update
          npm run prod
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public
          retention-days: 3
  deploy-production:
    name: Deploy Project to Production Server
    runs-on: ubuntu-latest
    needs: [ build-js-production ]
    if: github.ref == 'refs/heads/master'
    steps:
#      - uses: actions/checkout@v1
#      - name: Fetch built assets from Artifacts
#        uses: actions/download-artifact@v1
#        with:
#          name: assets
#          path: public
#      - name: Setup PHP
#        uses: shivammathur/setup-php@master
#        with:
#          php-version: '7.3'
#          extension-csv: mbstring, bcmath
#      - name: Composer install
#        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#      - name: Setup Deployer
#        uses: atymic/deployer-php-action@master
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
           host: ${{ secrets.HOST }}
           key: ${{ secrets.SSH_KEY }}
           username: ${{ secrets.USERNAME }}
           port: ${{ secrets.PORT }}
           script: |
             ls -a
             cd /var/www/html/wongtani-frontend
             ls -a
             git status
             git pull origin master
#             cd /var/www/html/wongtani-frontend/
#             ls
#             git pull origin master
#             composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
#             php artisan migrate
  sonarCloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@master
      with:
        projectBaseDir: my-custom-directory
        args: >
          -Dsonar.organization=my-organization
          -Dsonar.projectKey=my-projectkey
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.sources=lib/
          -Dsonar.test.exclusions=tests/**
          -Dsonar.tests=tests/
          -Dsonar.verbose=true